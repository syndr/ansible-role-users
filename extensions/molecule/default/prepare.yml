---

- name: Prepare controller for execution
  hosts: localhost
  vars:
    project_dir: "{{ molecule_scenario_directory.split('/')[:-3] | join('/') }}"
  tasks:
    - name: Project directory is
      ansible.builtin.debug:
        var: project_dir

    - name: Load super important role info
      block:
        - name: Load meta file
          ansible.builtin.include_vars:
            file: "{{ project_dir }}/meta/main.yml"
            name: project_meta

        - name: Role name is defined
          ansible.builtin.assert:
            that:
              - project_meta.galaxy_info.role_name is defined
            fail_msg: This configuration requires the role_name meta variable to be defined!
      rescue:
        - name: Configuration load error
          ansible.builtin.fail:
            msg: Error loading role meta information! This molecule configuration is meant to be run from the extensions/ subdirectory of your role directory!

    - name: Create roles directory
      ansible.builtin.file:
        path: "{{ molecule_ephemeral_directory }}/roles"
        state: directory
        mode: 0755

    - name: Link current repository to roles working directory
      ansible.builtin.file:
        src: "{{ project_dir }}"
        dest: "{{ molecule_ephemeral_directory }}/roles/{{ project_meta.galaxy_info.role_name }}"
        state: link

- name: Prepare target host for execution
  hosts: molecule
  tasks:
    - name: Install system utilities
      become: true
      ansible.builtin.package:
        name:
          - mkpasswd
          - pwgen
          - openssh
        state: present

    - name: Generate creds for this test
      block:
        - name: Generate admin user password
          ansible.builtin.command:
            cmd: pwgen -s 20 1
          register: testadmin_pwgen_raw

        - name: Generate admin user password hash
          ansible.builtin.command:
            cmd: mkpasswd -m sha-256 {{ testadmin_pwgen_raw.stdout | trim }}
          register: testadmin_mkpasswd_raw

        - name: Generate ssh keypair
          ansible.builtin.command:
            cmd: 'ssh-keygen -C testuser@molecule -f /tmp/testuser -P ""'
            creates: /tmp/testuser

        - name: Load ssh public key
          ansible.builtin.slurp:
            src: /tmp/testuser.pub
          register: testuser_pubkey_b64

        - name: Define vars
          ansible.builtin.set_fact:
            user_creds:
              testadmin_pw: "{{ testadmin_pwgen_raw.stdout | trim }}"
              testadmin_pw_hash: "{{ testadmin_mkpasswd_raw.stdout | trim }}"
              testuser_pubkey: "{{ testuser_pubkey_b64.content | b64decode }}"

        - name: Save vars to host (for idempotence)
          become: true
          block:
            - name: Ansible facts directory exists
              ansible.builtin.file:
                path: /etc/ansible/facts.d
                state: directory
                owner: root
                group: root
                mode: 0744

            - name: User creds saved to local Ansible facts
              ansible.builtin.copy:
                dest: /etc/ansible/facts.d/molecule.fact
                content: "{{ {'user_creds': user_creds} | to_json }}"
                owner: root
                group: root
                mode: 0644


