---
# Verify that the target code runs successfullly.
# Note that this playbook (converge.yml) must be idempotent!

# Check that the molecule inventory is correctly configured
- name: Fail if molecule group is missing
  hosts: localhost
  tasks:
    - name: Print host inventory groups
      ansible.builtin.debug:
        msg: "{{ groups }}"

    - name: Assert group existence
      ansible.builtin.assert:
        that: "'molecule' in groups"
        fail_msg: |
          molecule group was not found inside inventory groups: {{ groups }}

- name: Converge
  hosts: molecule
  tasks:
    - name: Do preparation
      block:
        - name: Load local host facts
          ansible.builtin.setup:
            gather_subset:
              - '!all'
              - '!min'
              - local
              - date_time

        - name: Show local Ansible facts
          ansible.builtin.debug:
            var: ansible_facts.ansible_local
            verbosity: 1

        - name: Load user creds
          ansible.builtin.set_fact:
            user_creds: "{{ ansible_local.molecule.user_creds }}"

    - name: Create test users
      ansible.builtin.include_role:
        name: users
      vars:
        ansible_user: molecule_runner
        server_users:
          - username: testadmin
            admin: true
            state: present
            password: "{{ user_creds.testadmin_pw_hash }}"
          - username: testuser
            state: present
            ssh_keys:
              - "{{ user_creds.testuser_pubkey }}"
          - username: test_application_user
            state: present
            create_home: false
            robot: true
            groups:
              - test_application_group
          - username: test_ssh_keygen_user
            state: present
            generate_ssh_key: true
          - username: test_ssh_privkey_user
            state: present
            ssh_private_key: "{{ user_creds.testuser_privkey }}"
            ssh_key_type: rsa
          - username: test_temporary_user
            state: present
            expires: "{{ ansible_date_time.epoch | int + 3600 }}"
            ssh_keys:
              - "{{ user_creds.testuser_pubkey }}"
          - username: test_temporary_expired_user
            state: present
            expires: "{{ ansible_date_time.epoch }}"
            ssh_keys:
              - "{{ user_creds.testuser_pubkey }}"
          - username: test_absent_user
            state: absent


