---

- name: Prepare controller for execution
  hosts: localhost
  tasks:
    - name: Configure for standalone role testing
      ansible.builtin.include_role:
        name: syndr.molecule.prepare_controller
      vars:
        prepare_controller_project_type: role

- name: Prepare target host for execution
  hosts: molecule
  tasks:
    ##
    # Creating an admin service account for Molecule/Ansible to use for testing
    #
    #   - If you run Ansible as a service account (you should) on your hosts and
    #     not as root, it is wise to also test as a non-root user!
    #
    #   - To use this account, add the following to any plays targeting test
    #     infrastructure (such as in converge.yml):
    #
    #         vars:
    #           ansible_user: molecule_runner
    ##

    - name: Create ansible service account
      vars:
        molecule_user: molecule_runner
      become: true
      block:
        - name: Create ansible group
          ansible.builtin.group:
            name: "{{ molecule_user }}"

        - name: Create ansible user
          ansible.builtin.user:
            name: "{{ molecule_user }}"
            group: "{{ molecule_user }}"

        - name: Sudoers.d directory exists
          ansible.builtin.file:
            path: /etc/sudoers.d
            state: directory
            owner: root
            group: root
            mode: 0751

        - name: Ansible user has sudo
          ansible.builtin.copy:
            content: |
              {{ molecule_user }}  ALL=(ALL)  NOPASSWD: ALL
            dest: /etc/sudoers.d/ansible
            owner: root
            group: root
            mode: 0600

    - name: Install system utilities
      become: true
      ansible.builtin.package:
        name:
          - openssh
        state: present

    - name: Generate creds for this test
      block:
        - name: Generate admin user password
          ansible.builtin.shell:
            cmd: tr -dc 'a-zA-Z0-9!@#$%^&*()_+' < /dev/urandom | head -c 8; echo
          register: testadmin_pwgen_raw

        - name: Generate admin user password hash
          ansible.builtin.command:
            cmd: openssl passwd -1 {{ testadmin_pwgen_raw.stdout | trim }}
          register: testadmin_pwhash_raw

        - name: Generate ssh keypair
          ansible.builtin.command:
            cmd: 'ssh-keygen -C testuser@molecule -f /tmp/testuser -P ""'
            creates: /tmp/testuser

        - name: Load ssh public key
          ansible.builtin.slurp:
            src: /tmp/testuser.pub
          register: testuser_pubkey_b64

        - name: Define vars
          ansible.builtin.set_fact:
            user_creds:
              testadmin_pw: "{{ testadmin_pwgen_raw.stdout | trim }}"
              testadmin_pw_hash: "{{ testadmin_pwhash_raw.stdout | trim }}"
              testuser_pubkey: "{{ testuser_pubkey_b64.content | b64decode }}"

        - name: Save vars to host (for idempotence)
          become: true
          block:
            - name: Ansible facts directory exists
              ansible.builtin.file:
                path: /etc/ansible/facts.d
                state: directory
                owner: root
                group: root
                mode: 0755

            - name: User creds saved to local Ansible facts
              ansible.builtin.copy:
                dest: /etc/ansible/facts.d/molecule.fact
                content: "{{ {'user_creds': user_creds} | to_json }}"
                owner: root
                group: root
                mode: 0644

